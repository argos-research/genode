// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: setup.proto

#ifndef PROTOBUF_setup_2eproto__INCLUDED
#define PROTOBUF_setup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "position.pb.h"
// @@protoc_insertion_point(includes)
namespace protobuf {
class Position;
class PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
class Segment;
class SegmentDefaultTypeInternal;
extern SegmentDefaultTypeInternal _Segment_default_instance_;
class Setup;
class SetupDefaultTypeInternal;
extern SetupDefaultTypeInternal _Setup_default_instance_;
}  // namespace protobuf

namespace protobuf {

namespace protobuf_setup_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_setup_2eproto

// ===================================================================

class Setup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.Setup) */ {
 public:
  Setup();
  virtual ~Setup();

  Setup(const Setup& from);

  inline Setup& operator=(const Setup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Setup& default_instance();

  static inline const Setup* internal_default_instance() {
    return reinterpret_cast<const Setup*>(
               &_Setup_default_instance_);
  }

  void Swap(Setup* other);

  // implements Message ----------------------------------------------

  inline Setup* New() const PROTOBUF_FINAL { return New(NULL); }

  Setup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Setup& from);
  void MergeFrom(const Setup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Setup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protobuf.Segment segments = 1;
  int segments_size() const;
  void clear_segments();
  static const int kSegmentsFieldNumber = 1;
  const ::protobuf::Segment& segments(int index) const;
  ::protobuf::Segment* mutable_segments(int index);
  ::protobuf::Segment* add_segments();
  ::google::protobuf::RepeatedPtrField< ::protobuf::Segment >*
      mutable_segments();
  const ::google::protobuf::RepeatedPtrField< ::protobuf::Segment >&
      segments() const;

  // @@protoc_insertion_point(class_scope:protobuf.Setup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::Segment > segments_;
  friend struct  protobuf_setup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Segment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.Segment) */ {
 public:
  Segment();
  virtual ~Segment();

  Segment(const Segment& from);

  inline Segment& operator=(const Segment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Segment& default_instance();

  static inline const Segment* internal_default_instance() {
    return reinterpret_cast<const Segment*>(
               &_Segment_default_instance_);
  }

  void Swap(Segment* other);

  // implements Message ----------------------------------------------

  inline Segment* New() const PROTOBUF_FINAL { return New(NULL); }

  Segment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Segment& from);
  void MergeFrom(const Segment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Segment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protobuf.Position vertex = 1;
  int vertex_size() const;
  void clear_vertex();
  static const int kVertexFieldNumber = 1;
  const ::protobuf::Position& vertex(int index) const;
  ::protobuf::Position* mutable_vertex(int index);
  ::protobuf::Position* add_vertex();
  ::google::protobuf::RepeatedPtrField< ::protobuf::Position >*
      mutable_vertex();
  const ::google::protobuf::RepeatedPtrField< ::protobuf::Position >&
      vertex() const;

  // optional float width = 2;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  float width() const;
  void set_width(float value);

  // optional float length = 3;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 3;
  float length() const;
  void set_length(float value);

  // @@protoc_insertion_point(class_scope:protobuf.Segment)
 private:
  void set_has_width();
  void clear_has_width();
  void set_has_length();
  void clear_has_length();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::Position > vertex_;
  float width_;
  float length_;
  friend struct  protobuf_setup_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Setup

// repeated .protobuf.Segment segments = 1;
inline int Setup::segments_size() const {
  return segments_.size();
}
inline void Setup::clear_segments() {
  segments_.Clear();
}
inline const ::protobuf::Segment& Setup::segments(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.Setup.segments)
  return segments_.Get(index);
}
inline ::protobuf::Segment* Setup::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.Setup.segments)
  return segments_.Mutable(index);
}
inline ::protobuf::Segment* Setup::add_segments() {
  // @@protoc_insertion_point(field_add:protobuf.Setup.segments)
  return segments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::Segment >*
Setup::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Setup.segments)
  return &segments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::Segment >&
Setup::segments() const {
  // @@protoc_insertion_point(field_list:protobuf.Setup.segments)
  return segments_;
}

// -------------------------------------------------------------------

// Segment

// repeated .protobuf.Position vertex = 1;
inline int Segment::vertex_size() const {
  return vertex_.size();
}
inline void Segment::clear_vertex() {
  vertex_.Clear();
}
inline const ::protobuf::Position& Segment::vertex(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.Segment.vertex)
  return vertex_.Get(index);
}
inline ::protobuf::Position* Segment::mutable_vertex(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.Segment.vertex)
  return vertex_.Mutable(index);
}
inline ::protobuf::Position* Segment::add_vertex() {
  // @@protoc_insertion_point(field_add:protobuf.Segment.vertex)
  return vertex_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::Position >*
Segment::mutable_vertex() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Segment.vertex)
  return &vertex_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::Position >&
Segment::vertex() const {
  // @@protoc_insertion_point(field_list:protobuf.Segment.vertex)
  return vertex_;
}

// optional float width = 2;
inline bool Segment::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Segment::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Segment::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Segment::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline float Segment::width() const {
  // @@protoc_insertion_point(field_get:protobuf.Segment.width)
  return width_;
}
inline void Segment::set_width(float value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Segment.width)
}

// optional float length = 3;
inline bool Segment::has_length() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Segment::set_has_length() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Segment::clear_has_length() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Segment::clear_length() {
  length_ = 0;
  clear_has_length();
}
inline float Segment::length() const {
  // @@protoc_insertion_point(field_get:protobuf.Segment.length)
  return length_;
}
inline void Segment::set_length(float value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Segment.length)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_setup_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state.proto

#ifndef PROTOBUF_state_2eproto__INCLUDED
#define PROTOBUF_state_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "vehicle.pb.h"
// @@protoc_insertion_point(includes)
namespace protobuf {
class State;
class StateDefaultTypeInternal;
extern StateDefaultTypeInternal _State_default_instance_;
class Vehicle;
class VehicleDefaultTypeInternal;
extern VehicleDefaultTypeInternal _Vehicle_default_instance_;
}  // namespace protobuf

namespace protobuf {

namespace protobuf_state_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_state_2eproto

// ===================================================================

class State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.State) */ {
 public:
  State();
  virtual ~State();

  State(const State& from);

  inline State& operator=(const State& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const State& default_instance();

  static inline const State* internal_default_instance() {
    return reinterpret_cast<const State*>(
               &_State_default_instance_);
  }

  void Swap(State* other);

  // implements Message ----------------------------------------------

  inline State* New() const PROTOBUF_FINAL { return New(NULL); }

  State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const State& from);
  void MergeFrom(const State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protobuf.Vehicle vehicles = 1;
  int vehicles_size() const;
  void clear_vehicles();
  static const int kVehiclesFieldNumber = 1;
  const ::protobuf::Vehicle& vehicles(int index) const;
  ::protobuf::Vehicle* mutable_vehicles(int index);
  ::protobuf::Vehicle* add_vehicles();
  ::google::protobuf::RepeatedPtrField< ::protobuf::Vehicle >*
      mutable_vehicles();
  const ::google::protobuf::RepeatedPtrField< ::protobuf::Vehicle >&
      vehicles() const;

  // required float time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  float time() const;
  void set_time(float value);

  // @@protoc_insertion_point(class_scope:protobuf.State)
 private:
  void set_has_time();
  void clear_has_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::Vehicle > vehicles_;
  float time_;
  friend struct  protobuf_state_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// State

// repeated .protobuf.Vehicle vehicles = 1;
inline int State::vehicles_size() const {
  return vehicles_.size();
}
inline void State::clear_vehicles() {
  vehicles_.Clear();
}
inline const ::protobuf::Vehicle& State::vehicles(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.State.vehicles)
  return vehicles_.Get(index);
}
inline ::protobuf::Vehicle* State::mutable_vehicles(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.State.vehicles)
  return vehicles_.Mutable(index);
}
inline ::protobuf::Vehicle* State::add_vehicles() {
  // @@protoc_insertion_point(field_add:protobuf.State.vehicles)
  return vehicles_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::Vehicle >*
State::mutable_vehicles() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.State.vehicles)
  return &vehicles_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::Vehicle >&
State::vehicles() const {
  // @@protoc_insertion_point(field_list:protobuf.State.vehicles)
  return vehicles_;
}

// required float time = 2;
inline bool State::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void State::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void State::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void State::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline float State::time() const {
  // @@protoc_insertion_point(field_get:protobuf.State.time)
  return time_;
}
inline void State::set_time(float value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:protobuf.State.time)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_state_2eproto__INCLUDED

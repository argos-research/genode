// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: setup.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "setup.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf {
class SetupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Setup> {
} _Setup_default_instance_;
class SegmentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Segment> {
} _Segment_default_instance_;

namespace protobuf_setup_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Setup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Setup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Setup, segments_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment, vertex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Segment, length_),
  ~0u,
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 5, sizeof(Setup)},
  { 6, 13, sizeof(Segment)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Setup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Segment_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "setup.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _Setup_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Segment_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf::protobuf_position_2eproto::InitDefaults();
  _Setup_default_instance_.DefaultConstruct();
  _Segment_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013setup.proto\022\010protobuf\032\016position.proto\""
      ",\n\005Setup\022#\n\010segments\030\001 \003(\0132\021.protobuf.Se"
      "gment\"L\n\007Segment\022\"\n\006vertex\030\001 \003(\0132\022.proto"
      "buf.Position\022\r\n\005width\030\002 \001(\002\022\016\n\006length\030\003 "
      "\001(\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 163);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "setup.proto", &protobuf_RegisterTypes);
  ::protobuf::protobuf_position_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_setup_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Setup::kSegmentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Setup::Setup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_setup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.Setup)
}
Setup::Setup(const Setup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      segments_(from.segments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf.Setup)
}

void Setup::SharedCtor() {
  _cached_size_ = 0;
}

Setup::~Setup() {
  // @@protoc_insertion_point(destructor:protobuf.Setup)
  SharedDtor();
}

void Setup::SharedDtor() {
}

void Setup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Setup::descriptor() {
  protobuf_setup_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_setup_2eproto::file_level_metadata[0].descriptor;
}

const Setup& Setup::default_instance() {
  protobuf_setup_2eproto::InitDefaults();
  return *internal_default_instance();
}

Setup* Setup::New(::google::protobuf::Arena* arena) const {
  Setup* n = new Setup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Setup::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.Setup)
  segments_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Setup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.Setup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protobuf.Segment segments = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_segments()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.Setup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.Setup)
  return false;
#undef DO_
}

void Setup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.Setup)
  // repeated .protobuf.Segment segments = 1;
  for (unsigned int i = 0, n = this->segments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->segments(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.Setup)
}

::google::protobuf::uint8* Setup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.Setup)
  // repeated .protobuf.Segment segments = 1;
  for (unsigned int i = 0, n = this->segments_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->segments(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.Setup)
  return target;
}

size_t Setup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.Setup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .protobuf.Segment segments = 1;
  {
    unsigned int count = this->segments_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->segments(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Setup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.Setup)
  GOOGLE_DCHECK_NE(&from, this);
  const Setup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Setup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.Setup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.Setup)
    MergeFrom(*source);
  }
}

void Setup::MergeFrom(const Setup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.Setup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  segments_.MergeFrom(from.segments_);
}

void Setup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.Setup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Setup::CopyFrom(const Setup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.Setup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Setup::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->segments())) return false;
  return true;
}

void Setup::Swap(Setup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Setup::InternalSwap(Setup* other) {
  segments_.UnsafeArenaSwap(&other->segments_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Setup::GetMetadata() const {
  protobuf_setup_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_setup_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Setup

// repeated .protobuf.Segment segments = 1;
int Setup::segments_size() const {
  return segments_.size();
}
void Setup::clear_segments() {
  segments_.Clear();
}
const ::protobuf::Segment& Setup::segments(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.Setup.segments)
  return segments_.Get(index);
}
::protobuf::Segment* Setup::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.Setup.segments)
  return segments_.Mutable(index);
}
::protobuf::Segment* Setup::add_segments() {
  // @@protoc_insertion_point(field_add:protobuf.Setup.segments)
  return segments_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf::Segment >*
Setup::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Setup.segments)
  return &segments_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf::Segment >&
Setup::segments() const {
  // @@protoc_insertion_point(field_list:protobuf.Setup.segments)
  return segments_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Segment::kVertexFieldNumber;
const int Segment::kWidthFieldNumber;
const int Segment::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Segment::Segment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_setup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.Segment)
}
Segment::Segment(const Segment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      vertex_(from.vertex_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&width_, &from.width_,
    reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&width_) + sizeof(length_));
  // @@protoc_insertion_point(copy_constructor:protobuf.Segment)
}

void Segment::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&width_, 0, reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&width_) + sizeof(length_));
}

Segment::~Segment() {
  // @@protoc_insertion_point(destructor:protobuf.Segment)
  SharedDtor();
}

void Segment::SharedDtor() {
}

void Segment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Segment::descriptor() {
  protobuf_setup_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_setup_2eproto::file_level_metadata[1].descriptor;
}

const Segment& Segment::default_instance() {
  protobuf_setup_2eproto::InitDefaults();
  return *internal_default_instance();
}

Segment* Segment::New(::google::protobuf::Arena* arena) const {
  Segment* n = new Segment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Segment::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.Segment)
  vertex_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&width_, 0, reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&width_) + sizeof(length_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Segment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.Segment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protobuf.Position vertex = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vertex()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional float width = 2;
      case 2: {
        if (tag == 21u) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float length = 3;
      case 3: {
        if (tag == 29u) {
          set_has_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.Segment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.Segment)
  return false;
#undef DO_
}

void Segment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.Segment)
  // repeated .protobuf.Position vertex = 1;
  for (unsigned int i = 0, n = this->vertex_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->vertex(i), output);
  }

  // optional float width = 2;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->width(), output);
  }

  // optional float length = 3;
  if (has_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->length(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.Segment)
}

::google::protobuf::uint8* Segment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.Segment)
  // repeated .protobuf.Position vertex = 1;
  for (unsigned int i = 0, n = this->vertex_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->vertex(i), false, target);
  }

  // optional float width = 2;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->width(), target);
  }

  // optional float length = 3;
  if (has_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->length(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.Segment)
  return target;
}

size_t Segment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.Segment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .protobuf.Position vertex = 1;
  {
    unsigned int count = this->vertex_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vertex(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional float width = 2;
    if (has_width()) {
      total_size += 1 + 4;
    }

    // optional float length = 3;
    if (has_length()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Segment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.Segment)
  GOOGLE_DCHECK_NE(&from, this);
  const Segment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Segment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.Segment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.Segment)
    MergeFrom(*source);
  }
}

void Segment::MergeFrom(const Segment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.Segment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vertex_.MergeFrom(from.vertex_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_length()) {
      set_length(from.length());
    }
  }
}

void Segment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Segment::CopyFrom(const Segment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Segment::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->vertex())) return false;
  return true;
}

void Segment::Swap(Segment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Segment::InternalSwap(Segment* other) {
  vertex_.UnsafeArenaSwap(&other->vertex_);
  std::swap(width_, other->width_);
  std::swap(length_, other->length_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Segment::GetMetadata() const {
  protobuf_setup_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_setup_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Segment

// repeated .protobuf.Position vertex = 1;
int Segment::vertex_size() const {
  return vertex_.size();
}
void Segment::clear_vertex() {
  vertex_.Clear();
}
const ::protobuf::Position& Segment::vertex(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.Segment.vertex)
  return vertex_.Get(index);
}
::protobuf::Position* Segment::mutable_vertex(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.Segment.vertex)
  return vertex_.Mutable(index);
}
::protobuf::Position* Segment::add_vertex() {
  // @@protoc_insertion_point(field_add:protobuf.Segment.vertex)
  return vertex_.Add();
}
::google::protobuf::RepeatedPtrField< ::protobuf::Position >*
Segment::mutable_vertex() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Segment.vertex)
  return &vertex_;
}
const ::google::protobuf::RepeatedPtrField< ::protobuf::Position >&
Segment::vertex() const {
  // @@protoc_insertion_point(field_list:protobuf.Segment.vertex)
  return vertex_;
}

// optional float width = 2;
bool Segment::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Segment::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
void Segment::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
void Segment::clear_width() {
  width_ = 0;
  clear_has_width();
}
float Segment::width() const {
  // @@protoc_insertion_point(field_get:protobuf.Segment.width)
  return width_;
}
void Segment::set_width(float value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Segment.width)
}

// optional float length = 3;
bool Segment::has_length() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Segment::set_has_length() {
  _has_bits_[0] |= 0x00000002u;
}
void Segment::clear_has_length() {
  _has_bits_[0] &= ~0x00000002u;
}
void Segment::clear_length() {
  length_ = 0;
  clear_has_length();
}
float Segment::length() const {
  // @@protoc_insertion_point(field_get:protobuf.Segment.length)
  return length_;
}
void Segment::set_length(float value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Segment.length)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

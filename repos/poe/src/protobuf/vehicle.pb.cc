// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vehicle.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "vehicle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protobuf {
class VehicleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Vehicle> {
} _Vehicle_default_instance_;

namespace protobuf_vehicle_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vehicle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vehicle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vehicle, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vehicle, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vehicle, yaw_),
  0,
  1,
  2,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(Vehicle)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vehicle_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "vehicle.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _Vehicle_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf::protobuf_position_2eproto::InitDefaults();
  _Vehicle_default_instance_.DefaultConstruct();
  _Vehicle_default_instance_.get_mutable()->position_ = const_cast< ::protobuf::Position*>(
      ::protobuf::Position::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rvehicle.proto\022\010protobuf\032\016position.prot"
      "o\"J\n\007Vehicle\022\014\n\004name\030\001 \002(\t\022$\n\010position\030\002"
      " \002(\0132\022.protobuf.Position\022\013\n\003yaw\030\003 \002(\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 117);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vehicle.proto", &protobuf_RegisterTypes);
  ::protobuf::protobuf_position_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_vehicle_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vehicle::kNameFieldNumber;
const int Vehicle::kPositionFieldNumber;
const int Vehicle::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vehicle::Vehicle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_vehicle_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.Vehicle)
}
Vehicle::Vehicle(const Vehicle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_position()) {
    position_ = new ::protobuf::Position(*from.position_);
  } else {
    position_ = NULL;
  }
  yaw_ = from.yaw_;
  // @@protoc_insertion_point(copy_constructor:protobuf.Vehicle)
}

void Vehicle::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, reinterpret_cast<char*>(&yaw_) -
    reinterpret_cast<char*>(&position_) + sizeof(yaw_));
}

Vehicle::~Vehicle() {
  // @@protoc_insertion_point(destructor:protobuf.Vehicle)
  SharedDtor();
}

void Vehicle::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete position_;
  }
}

void Vehicle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vehicle::descriptor() {
  protobuf_vehicle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vehicle_2eproto::file_level_metadata[0].descriptor;
}

const Vehicle& Vehicle::default_instance() {
  protobuf_vehicle_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vehicle* Vehicle::New(::google::protobuf::Arena* arena) const {
  Vehicle* n = new Vehicle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vehicle::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.Vehicle)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_position()) {
      GOOGLE_DCHECK(position_ != NULL);
      position_->::protobuf::Position::Clear();
    }
  }
  yaw_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vehicle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.Vehicle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protobuf.Vehicle.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .protobuf.Position position = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float yaw = 3;
      case 3: {
        if (tag == 29u) {
          set_has_yaw();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.Vehicle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.Vehicle)
  return false;
#undef DO_
}

void Vehicle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.Vehicle)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf.Vehicle.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .protobuf.Position position = 2;
  if (has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->position_, output);
  }

  // required float yaw = 3;
  if (has_yaw()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->yaw(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.Vehicle)
}

::google::protobuf::uint8* Vehicle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.Vehicle)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protobuf.Vehicle.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .protobuf.Position position = 2;
  if (has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->position_, false, target);
  }

  // required float yaw = 3;
  if (has_yaw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->yaw(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.Vehicle)
  return target;
}

size_t Vehicle::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protobuf.Vehicle)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_position()) {
    // required .protobuf.Position position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  if (has_yaw()) {
    // required float yaw = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Vehicle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.Vehicle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .protobuf.Position position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);

    // required float yaw = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vehicle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.Vehicle)
  GOOGLE_DCHECK_NE(&from, this);
  const Vehicle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vehicle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.Vehicle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.Vehicle)
    MergeFrom(*source);
  }
}

void Vehicle::MergeFrom(const Vehicle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.Vehicle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_position()) {
      mutable_position()->::protobuf::Position::MergeFrom(from.position());
    }
    if (from.has_yaw()) {
      set_yaw(from.yaw());
    }
  }
}

void Vehicle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vehicle::CopyFrom(const Vehicle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vehicle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_position()) {
    if (!this->position_->IsInitialized()) return false;
  }
  return true;
}

void Vehicle::Swap(Vehicle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vehicle::InternalSwap(Vehicle* other) {
  name_.Swap(&other->name_);
  std::swap(position_, other->position_);
  std::swap(yaw_, other->yaw_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vehicle::GetMetadata() const {
  protobuf_vehicle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_vehicle_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vehicle

// required string name = 1;
bool Vehicle::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vehicle::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Vehicle::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vehicle::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Vehicle::name() const {
  // @@protoc_insertion_point(field_get:protobuf.Vehicle.name)
  return name_.GetNoArena();
}
void Vehicle::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.Vehicle.name)
}
#if LANG_CXX11
void Vehicle::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protobuf.Vehicle.name)
}
#endif
void Vehicle::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.Vehicle.name)
}
void Vehicle::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.Vehicle.name)
}
::std::string* Vehicle::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protobuf.Vehicle.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Vehicle::release_name() {
  // @@protoc_insertion_point(field_release:protobuf.Vehicle.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Vehicle::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protobuf.Vehicle.name)
}

// required .protobuf.Position position = 2;
bool Vehicle::has_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vehicle::set_has_position() {
  _has_bits_[0] |= 0x00000002u;
}
void Vehicle::clear_has_position() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vehicle::clear_position() {
  if (position_ != NULL) position_->::protobuf::Position::Clear();
  clear_has_position();
}
const ::protobuf::Position& Vehicle::position() const {
  // @@protoc_insertion_point(field_get:protobuf.Vehicle.position)
  return position_ != NULL ? *position_
                         : *::protobuf::Position::internal_default_instance();
}
::protobuf::Position* Vehicle::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::protobuf::Position;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.Vehicle.position)
  return position_;
}
::protobuf::Position* Vehicle::release_position() {
  // @@protoc_insertion_point(field_release:protobuf.Vehicle.position)
  clear_has_position();
  ::protobuf::Position* temp = position_;
  position_ = NULL;
  return temp;
}
void Vehicle::set_allocated_position(::protobuf::Position* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.Vehicle.position)
}

// required float yaw = 3;
bool Vehicle::has_yaw() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Vehicle::set_has_yaw() {
  _has_bits_[0] |= 0x00000004u;
}
void Vehicle::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000004u;
}
void Vehicle::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
float Vehicle::yaw() const {
  // @@protoc_insertion_point(field_get:protobuf.Vehicle.yaw)
  return yaw_;
}
void Vehicle::set_yaw(float value) {
  set_has_yaw();
  yaw_ = value;
  // @@protoc_insertion_point(field_set:protobuf.Vehicle.yaw)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)
